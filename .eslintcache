[{"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\index.tsx":"1","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\store.ts":"2","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\App.tsx":"3","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\savedPlayersSlice.ts":"4","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\tableOptionsSlice.ts":"5","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\playerFilterSlice.ts":"6","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\pages\\SavedPlayersPage.tsx":"7","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\pages\\SingleTeamPage.tsx":"8","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\pages\\AllPlayerPage.tsx":"9","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\Sidebar.tsx":"10","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\hooks.ts":"11","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\api\\fetchhooks.ts":"12","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\table\\PlayerTable.tsx":"13","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\ListOptionsSelect.tsx":"14","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\Nav.tsx":"15","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\PlayerFilterSelect.tsx":"16","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\PlayerColumnsSelect.tsx":"17","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\TeamSelect.tsx":"18","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\teams.ts":"19","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\utils.ts":"20","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\Pagination.tsx":"21","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\table\\columns.tsx":"22","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\CheckboxOption.tsx":"23","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\ModifierSelect.tsx":"24","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\table\\cells.tsx":"25","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\table\\stats.tsx":"26","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\models\\Player.ts":"27","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\playerItemSlice.ts":"28"},{"size":419,"mtime":1619438085871,"results":"29","hashOfConfig":"30"},{"size":659,"mtime":1619437465006,"results":"31","hashOfConfig":"30"},{"size":1479,"mtime":1619431013699,"results":"32","hashOfConfig":"30"},{"size":793,"mtime":1619431013712,"results":"33","hashOfConfig":"30"},{"size":1681,"mtime":1619438085873,"results":"34","hashOfConfig":"30"},{"size":1230,"mtime":1619431013711,"results":"35","hashOfConfig":"30"},{"size":636,"mtime":1619431013708,"results":"36","hashOfConfig":"30"},{"size":1310,"mtime":1619431013709,"results":"37","hashOfConfig":"30"},{"size":2645,"mtime":1619433835088,"results":"38","hashOfConfig":"30"},{"size":1984,"mtime":1619431013704,"results":"39","hashOfConfig":"30"},{"size":309,"mtime":1619431013707,"results":"40","hashOfConfig":"30"},{"size":2981,"mtime":1619433835082,"results":"41","hashOfConfig":"30"},{"size":7030,"mtime":1619438085894,"results":"42","hashOfConfig":"30"},{"size":1345,"mtime":1619438085869,"results":"43","hashOfConfig":"30"},{"size":1071,"mtime":1619431013703,"results":"44","hashOfConfig":"30"},{"size":3981,"mtime":1619431013704,"results":"45","hashOfConfig":"30"},{"size":1647,"mtime":1619431013703,"results":"46","hashOfConfig":"30"},{"size":1992,"mtime":1619431013704,"results":"47","hashOfConfig":"30"},{"size":2764,"mtime":1619431013714,"results":"48","hashOfConfig":"30"},{"size":1371,"mtime":1619433835089,"results":"49","hashOfConfig":"30"},{"size":2436,"mtime":1619433835083,"results":"50","hashOfConfig":"30"},{"size":10538,"mtime":1619438431630,"results":"51","hashOfConfig":"30"},{"size":688,"mtime":1619431013701,"results":"52","hashOfConfig":"30"},{"size":1446,"mtime":1619431013702,"results":"53","hashOfConfig":"30"},{"size":3208,"mtime":1619438581744,"results":"54","hashOfConfig":"30"},{"size":2838,"mtime":1619438085870,"results":"55","hashOfConfig":"30"},{"size":10467,"mtime":1619438085872,"results":"56","hashOfConfig":"30"},{"size":754,"mtime":1619437727681,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1w7p0t2",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\index.tsx",[],[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\store.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\App.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\savedPlayersSlice.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\tableOptionsSlice.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\playerFilterSlice.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\pages\\SavedPlayersPage.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\pages\\SingleTeamPage.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\pages\\AllPlayerPage.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\Sidebar.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\hooks.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\api\\fetchhooks.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\table\\PlayerTable.tsx",["116"],"import React, { useMemo, useState } from \"react\";\r\nimport Pagination from \"../Pagination\";\r\nimport { ColumnGroup, getColumns } from \"./columns\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { save, unsave } from \"../../store/savedPlayersSlice\";\r\nimport { Player } from \"../../models/Player\";\r\n\r\nexport type SortKeyGetter = (p: Player) => string | number;\r\n\r\nexport interface SortState {\r\n    column: string | null;\r\n    dir?: \"asc\" | \"desc\";\r\n    key?: SortKeyGetter;\r\n}\r\n\r\ninterface SortStateProps {\r\n    sort: SortState;\r\n    setSort: (sort: SortState) => void;\r\n}\r\n\r\nexport interface PlayerTableProps {\r\n    players: Player[];\r\n    pageSize?: number;\r\n}\r\n\r\nexport function PlayerTable(props: PlayerTableProps): JSX.Element {\r\n    const [sort, setSort] = useState<SortState>({ column: null });\r\n    const [page, setPage] = useState<number>(0);\r\n    const tableOptions = useAppSelector((state) => state.tableOptions);\r\n\r\n    const columns = useMemo(() => getColumns(tableOptions), [tableOptions]);\r\n    const sortedPlayers = useMemo(\r\n        () => sortPlayers(props.players, columns, sort),\r\n        [columns, props.players, tableOptions, sort]\r\n    );\r\n\r\n    const pageCount = props.pageSize\r\n        ? Math.ceil(props.players.length / props.pageSize)\r\n        : 0;\r\n\r\n    const pagedPlayers = useMemo(() => {\r\n        if (!props.pageSize) return sortedPlayers;\r\n\r\n        const pageCount = Math.ceil(props.players.length / props.pageSize);\r\n        const actualPage = Math.min(page, pageCount - 1);\r\n        return sortedPlayers.slice(\r\n            actualPage * props.pageSize,\r\n            (actualPage + 1) * props.pageSize\r\n        );\r\n    }, [sortedPlayers, page, props.pageSize]);\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table table-sm table-hover player-table\">\r\n                <TableColgroups columns={columns} />\r\n                <TableHeader columns={columns} sort={sort} setSort={setSort} />\r\n                <TableBody players={pagedPlayers} columns={columns} />\r\n            </table>\r\n            <Pagination\r\n                pageCount={pageCount}\r\n                pageIndex={page}\r\n                gotoPage={setPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TableColgroups(props: { columns: ColumnGroup[] }) {\r\n    return (\r\n        <>\r\n            {props.columns.map((cg, i) => (\r\n                <colgroup\r\n                    key={cg.name}\r\n                    // Make the first group a bit longer to handle the checkbox\r\n                    span={cg.columns.length + (i === 0 ? 1 : 0)}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\ninterface TableBodyProps {\r\n    players: Player[];\r\n    columns: ColumnGroup[];\r\n}\r\n\r\nfunction TableBody(props: TableBodyProps) {\r\n    return (\r\n        <tbody>\r\n            {props.players.map((p) => (\r\n                <TableRow key={p.id} player={p} columns={props.columns} />\r\n            ))}\r\n        </tbody>\r\n    );\r\n}\r\n\r\ninterface TableRowProps {\r\n    player: Player;\r\n    columns: ColumnGroup[];\r\n}\r\n\r\nfunction TableRow(props: TableRowProps) {\r\n    const toShow = useAppSelector((state) => state.playerItems.toShow);\r\n    const showItems = toShow.includes(props.player.id);\r\n\r\n    return (\r\n        <tr>\r\n            <SaveCheckbox id={props.player.id} />\r\n            {props.columns.flatMap((cg) => {\r\n                return cg.columns.map((c) => {\r\n                    const Cell = c.render;\r\n                    if (!Cell) return <td key={c.id} />;\r\n                    return <Cell key={c.id} player={props.player} />;\r\n                });\r\n            })}\r\n        </tr>\r\n    );\r\n}\r\n\r\ninterface TableHeaderProps extends SortStateProps {\r\n    columns: ColumnGroup[];\r\n}\r\n\r\nfunction TableHeader(props: TableHeaderProps) {\r\n    const flatColumns = props.columns.flatMap((cg) => cg.columns);\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th />\r\n                {props.columns.map((cg, i) => (\r\n                    <th key={i} colSpan={cg.columns.length}>\r\n                        {cg.name}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n            <tr>\r\n                <th />\r\n                {flatColumns.map((c) => (\r\n                    <TableColumnHeader\r\n                        key={c.id}\r\n                        id={c.id}\r\n                        title={c.alt}\r\n                        name={c.name}\r\n                        sort={props.sort}\r\n                        setSort={props.setSort}\r\n                    />\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\ninterface TableColumnHeaderProps extends SortStateProps {\r\n    id: string;\r\n    title?: string;\r\n    name: string;\r\n}\r\n\r\nfunction TableColumnHeader(props: TableColumnHeaderProps) {\r\n    const symbol = getSortSymbol(props.id, props.sort);\r\n\r\n    return (\r\n        <th\r\n            title={props.title}\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                props.setSort(getSortState(props.id, props.sort));\r\n            }}\r\n        >\r\n            {props.name}\r\n            {symbol}\r\n        </th>\r\n    );\r\n}\r\n\r\nfunction SaveCheckbox(props: { id: string }) {\r\n    const dispatch = useAppDispatch();\r\n    const players = useAppSelector((state) => state.savedPlayers.players);\r\n    const checked = players.includes(props.id);\r\n\r\n    return (\r\n        <td className=\"selectbox\">\r\n            <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                checked={checked}\r\n                onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                        dispatch(save(props.id));\r\n                    } else {\r\n                        dispatch(unsave(props.id));\r\n                    }\r\n                }}\r\n            />\r\n        </td>\r\n    );\r\n}\r\n\r\nfunction getSortSymbol(thisId: string, state: SortState) {\r\n    if (thisId !== state.column) return null;\r\n    if (state.dir === \"asc\") return \"☝\";\r\n    if (state.dir === \"desc\") return \"👇\";\r\n    return null;\r\n}\r\n\r\nfunction getSortState(thisId: string, state: SortState): SortState {\r\n    // Click on different column, set ascending\r\n    if (state.column !== thisId) return { column: thisId, dir: \"asc\" };\r\n\r\n    // Toggle ascending to descending\r\n    if (state.dir === \"asc\") return { column: thisId, dir: \"desc\" };\r\n\r\n    // Toggle descending to null\r\n    return { column: null, dir: undefined };\r\n}\r\n\r\nfunction sortPlayers(\r\n    players: Player[],\r\n    columns: ColumnGroup[],\r\n    sort: SortState\r\n): Player[] {\r\n    if (!sort.column) return players;\r\n\r\n    const sortColumn = columns\r\n        .flatMap((cg) => cg.columns)\r\n        .filter((c) => c.id === sort.column)[0];\r\n\r\n    const sortKey = sortColumn?.sortKey;\r\n    if (!sortKey) return players;\r\n\r\n    return [...players].sort((a, b) => {\r\n        const keyA = sortKey(a) ?? 0;\r\n        const keyB = sortKey(b) ?? 0;\r\n        const comp = keyA > keyB ? 1 : keyA < keyB ? -1 : 0;\r\n        return sort.dir === \"asc\" ? comp : -comp;\r\n    });\r\n}\r\n","C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\ListOptionsSelect.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\Nav.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\PlayerFilterSelect.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\PlayerColumnsSelect.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\TeamSelect.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\teams.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\utils.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\Pagination.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\table\\columns.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\CheckboxOption.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\sidebar\\ModifierSelect.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\table\\cells.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\components\\table\\stats.tsx",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\models\\Player.ts",[],"C:\\Users\\Textman\\Desktop\\MasterCollection\\Hobbycode\\Astrid's Blaseball Players\\blaseball-player-list\\src\\store\\playerItemSlice.ts",[],{"ruleId":"117","severity":1,"message":"118","line":104,"column":11,"nodeType":"119","messageId":"120","endLine":104,"endColumn":20},"@typescript-eslint/no-unused-vars","'showItems' is assigned a value but never used.","Identifier","unusedVar"]